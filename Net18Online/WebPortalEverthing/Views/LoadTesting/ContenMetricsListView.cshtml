@using WebPortalEverthing.Models.LoadTesting
@model List<MetricViewModel>
@using WebPortalEverthing.Services
@using WebPortalEverthing.Services.LoadTesting
@inject LoadAuthService loadAuthService
@inject LoadUserService loadUserService

@{
    Layout = "~/Views/Shared/LoadTesting/_LayoutLoadTesting.cshtml";
}

@section Scripts {
    <script src="~/js/LoadTesting/metrics.js"></script>
}

<div class="content">
    <div class="discription-tipes">
        @foreach( var metric in Model )
        {
            <div class="discription-type">
                <span class="@(metric.CreatorName == LoadAuthService.CLAIM_TYPE_NAME ? "special-load-volume" : "special")">

                    <div class="type-name">@metric.Name</div>
                </span> @*класс стиля*@
                @*Указать экшен, который будет вызван при отправке формы*@
                @*
            <form action="/LoadTesting/UpdateMetric" method="post">
            <input type="hidden" name="id" value="@metric.Id" />
            <input type="text" name="name" value="@metric.Name" />
            <input type="hidden" name="guid" value="@metric.Guid" />
            <input type="text" name="ThroughputInput" value="@metric.Throughput" />
            <input type="text" name="AverageInput" value="@metric.Average" />
            <input type="submit" value="Update" />
            </form>
            <div class="view-mode">
            </div>
            *@
                <div class="view-mode">
                    <span class="tag-view-mode">@metric.Name</span>
                    <span class="tag-view-mode">@metric.Guid</span>
                </div>
                <div class="edit-mode">
                    <input class="update-metric-id" type="hidden" name="id" value="@metric.Id" />
                    <input class="update-metric-name" type="text" name="name" value="@metric.Name" />
                    <input class="update-metric-guid" type="hidden" name="guid" value="@metric.Guid" />
                    <input class="update-metric-throughput" type="text" name="ThroughputInput" value="@metric.Throughput" />
                    <input class="update-metric-average" type="text" name="AverageInput" value="@metric.Average" />
                    <button class="update-metric-button" type="button">Update</button>
                </div>
                <div class="type-guid">GUID : @metric.Guid</div>
                <div class="type-container">
                    <img src="~/images/LoadTesting/photo_2024-07-15_09-13-16.jpg" alt="type1" />
                </div>
                <button type="button" class="toggle-button-tag-additional-info">Развернуть параметры (toggle)</button>
                <div class="additional-info">
                    @if( Model != null && Model.Count > 0 )
                    {
                        <span class="tag">скорость обработки (Throughput): @metric.Throughput </span>
                    } else
                    {
                        <span class="tag">Данные отсутствуют</span>
                    }
                    <span class="tag">среднее время отклика (Average): @metric.Average</span>
                    <span class="tag">Creator: @metric.CreatorName</span>
                    <span class="tag">Type of Load: @metric.LoadVolumeName</span>
                </div>
                @if( metric.CanDelete )
                {
                    <button type="button" class="delete-metric-by-guid" data-guid="@metric.Guid">Delete Guid</button>
                    <button type="button" class="delete-metric-by-id" data-id="@metric.Id">Delete Id</button>
                }

            </div>
        }

        <!-- Закрытие блока .discription-tipes -->
    </div>
</div>